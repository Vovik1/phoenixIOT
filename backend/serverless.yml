service: ${file(../config.cjs):config.serviceName}-backend
frameworkVersion: '3'

plugins:
  - serverless-iam-roles-per-function

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${file(../config.cjs):config.stage}
  region: ${file(../config.cjs):config.region}
  tracing:
    apiGateway: true
    lambda: true
  environment:
    BASE_URL: https://${self:custom.domainName}
    TABLE_NAME: !Ref Table

custom:
  domainName: ${file(../config.cjs):config.domain}


functions:
  temperatureAll:
    handler: handlers/all-temperatures.handleEvent
    events:
      - httpApi:
          method: GET
          path: "/"
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource:
          - !Sub "${Table.Arn}/*"

resources:
  Resources:
    CustomDomainPathMapping:
      Type: AWS::ApiGatewayV2::ApiMapping
      Properties:
        ApiId: !Ref HttpApi
        ApiMappingKey: "share"
        DomainName: ${self:custom.domainName}
        Stage: !Ref HttpApiStage

    Table:
        Type: AWS::DynamoDB::Table
        Properties:
          AttributeDefinitions:
            - AttributeName: plc_id
              AttributeType: S 
            - AttributeName: timestamp
              AttributeType: S
          KeySchema:
            - AttributeName: plc_id
              KeyType: HASH
            - AttributeName: timestamp
              KeyType: RANGE
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
          TableName: "PhoenixTable"
       
